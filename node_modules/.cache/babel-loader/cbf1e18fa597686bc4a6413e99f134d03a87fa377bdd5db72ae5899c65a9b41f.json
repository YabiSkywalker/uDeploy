{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://bandera-svc.yabi.dev';\n\n// Login function\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      console.log(response.data.token);\n      return response.data.token;\n    }\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\n\n// get all tickets\nexport const getAllTickets = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await axios.get(`${API_URL}/tickets/getAllTickets`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Accept': '*/*'\n      }\n    });\n    return response.data; // Return the ticket data\n  } catch (error) {\n    console.error('Error fetching tickets:', error);\n    throw new Error('Failed to fetch tickets');\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","email","password","response","post","data","token","localStorage","setItem","console","log","error","Error","getAllTickets","getItem","get","headers"],"sources":["/Users/yabseragebrekidan/Developer/bandera-web-client/src/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://bandera-svc.yabi.dev';\n\n// Login function\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      console.log(response.data.token);\n      return response.data.token;\n    }\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw new Error('Login failed');\n  }\n};\n\n// get all tickets\nexport const getAllTickets = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    const response = await axios.get(`${API_URL}/tickets/getAllTickets`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Accept': '*/*',\n      },\n    });\n\n    return response.data; // Return the ticket data\n  } catch (error) {\n    console.error('Error fetching tickets:', error);\n    throw new Error('Failed to fetch tickets');\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B;;AAE9C;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,aAAa,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAE/E,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAClDG,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAChC,OAAOH,QAAQ,CAACE,IAAI,CAACC,KAAK;IAC5B;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMP,KAAK,GAAGC,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACR,KAAK,EAAE;MACV,MAAM,IAAIM,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,wBAAwB,EAAE;MACnEiB,OAAO,EAAE;QACP,eAAe,EAAE,UAAUV,KAAK,EAAE;QAClC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,OAAOH,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}